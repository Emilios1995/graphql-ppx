name: Main workflow

on: [push]

jobs:
  test_and_build:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: setup
        run: |
          npm install -g esy@latest

      - name: install
        run: |
          esy install
          cd tests && npm install && cd ../

      - name: test and build
        run: |
          esy build
          cd tests && npm run test && cd ../
          mkdir -p bin
          mv _build/default/src/bucklescript_bin/bin.exe graphql_ppx-${{ matrix.os }}.exe
        env:
          CI: true
      - name: Upload artifacts ${TARGET_NAME}
        uses: actions/upload-artifact@master
        with:
          name: ${TARGET_NAME}
          path: bin/graphql_ppx-${TARGET_NAME}.exe

  release:
    needs: test_and_build
    name: Release
    # if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@master
        with:
          name: ${{ matrix.os }}
          path: graphql_ppx-${{ matrix.os }}.exe
      - name: Rename binaries
        run: |
          if [ "${{ matrix.os }}" = "macOS-latest" ]; then export TARGET_NAME=darwin-x64; fi
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then export TARGET_NAME=linux-x64; fi
          if [ "${{ matrix.os }}" = "windows-latest" ]; then export TARGET_NAME=win-x64; fi  
          mv graphql_ppx-${{ matrix.os }}.exe bin/graphql_ppx-${TARGET_NAME}.exe
      - name: Publish
        uses: actions/npm@master
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        with:
          args: publish
