// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';


var Raw = { };

var query = "query   {\nvariousScalars  {\nnullableString  \nstring  \nnullableInt  \nint  \nnullableFloat  \nfloat  \nnullableBoolean  \nboolean  \nnullableID  \nid  \n}\n\n}\n";

function parse(value) {
  var value$1 = value.variousScalars;
  var value$2 = value$1.id;
  var value$3 = value$1.nullableID;
  var nullableID = (value$3 == null) ? undefined : value$3;
  var value$4 = value$1.boolean;
  var value$5 = value$1.nullableBoolean;
  var nullableBoolean = (value$5 == null) ? undefined : value$5;
  var value$6 = value$1.float;
  var value$7 = value$1.nullableFloat;
  var nullableFloat = (value$7 == null) ? undefined : value$7;
  var value$8 = value$1.int;
  var value$9 = value$1.nullableInt;
  var nullableInt = (value$9 == null) ? undefined : value$9;
  var value$10 = value$1.string;
  var value$11 = value$1.nullableString;
  var nullableString = (value$11 == null) ? undefined : value$11;
  return {
          variousScalars: {
            nullableString: nullableString,
            string: value$10,
            nullableInt: nullableInt,
            int: value$8,
            nullableFloat: nullableFloat,
            float: value$6,
            nullableBoolean: nullableBoolean,
            boolean: value$4,
            nullableID: nullableID,
            id: value$2
          }
        };
}

function serialize(value) {
  var value$1 = value.variousScalars;
  var value$2 = value$1.id;
  var value$3 = value$1.nullableID;
  var nullableID = value$3 !== undefined ? value$3 : null;
  var value$4 = value$1.boolean;
  var value$5 = value$1.nullableBoolean;
  var nullableBoolean = value$5 !== undefined ? value$5 : null;
  var value$6 = value$1.float;
  var value$7 = value$1.nullableFloat;
  var nullableFloat = value$7 !== undefined ? value$7 : null;
  var value$8 = value$1.int;
  var value$9 = value$1.nullableInt;
  var nullableInt = value$9 !== undefined ? value$9 : null;
  var value$10 = value$1.string;
  var value$11 = value$1.nullableString;
  var nullableString = value$11 !== undefined ? value$11 : null;
  return {
          variousScalars: {
            nullableString: nullableString,
            string: value$10,
            nullableInt: nullableInt,
            int: value$8,
            nullableFloat: nullableFloat,
            float: value$6,
            nullableBoolean: nullableBoolean,
            boolean: value$4,
            nullableID: nullableID,
            id: value$2
          }
        };
}

var definition = /* tuple */[
  parse,
  query,
  serialize
];

var Z__INTERNAL = {
  graphql_module: 0
};

var MyQuery$prime = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  definition: definition,
  Z__INTERNAL: Z__INTERNAL
};

var MyQuery = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  definition: definition,
  Z__INTERNAL: Z__INTERNAL,
  self: MyQuery$prime
};

exports.MyQuery$prime = MyQuery$prime;
exports.MyQuery = MyQuery;
/* No side effect */
