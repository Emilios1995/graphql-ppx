// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';


var Raw = { };

var query = "query pokemon($id: String, $name: String)  {\npokemon(name: $name, id: $id)  {\nid  \nname  \n}\n\n}\n";

function parse(value) {
  var value$1 = value.pokemon;
  var tmp;
  if (value$1 == null) {
    tmp = undefined;
  } else {
    var value$2 = value$1.name;
    tmp = {
      id: value$1.id,
      name: (value$2 == null) ? undefined : value$2
    };
  }
  return {
          pokemon: tmp
        };
}

function serialize(value) {
  var value$1 = value.pokemon;
  var pokemon;
  if (value$1 !== undefined) {
    var value$2 = value$1;
    var value$3 = value$2.name;
    var name = value$3 !== undefined ? value$3 : null;
    var value$4 = value$2.id;
    pokemon = {
      id: value$4,
      name: name
    };
  } else {
    pokemon = null;
  }
  return {
          pokemon: pokemon
        };
}

function serializeVariables(inp) {
  var a = inp.id;
  var a$1 = inp.name;
  return {
          id: a !== undefined ? a : undefined,
          name: a$1 !== undefined ? a$1 : undefined
        };
}

function makeVariables(id, name, param) {
  return serializeVariables({
              id: id,
              name: name
            });
}

var definition = /* tuple */[
  parse,
  query,
  serialize
];

var Z__INTERNAL = {
  _graphql_name_100: 0,
  _graphql_name_94: 0,
  _graphql_id_111: 0,
  _graphql_id_107: 0,
  graphql_module: 0
};

var MyQuery$prime = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  definition: definition,
  Z__INTERNAL: Z__INTERNAL
};

var MyQuery = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  definition: definition,
  Z__INTERNAL: Z__INTERNAL,
  self: MyQuery$prime
};

exports.MyQuery$prime = MyQuery$prime;
exports.MyQuery = MyQuery;
/* No side effect */
