Compile Apollo › inlineFragmentQuery.re › output
// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';


var Raw = {};

function parse(value) {
  var value$1 = value.nullableOfNullable;
  var value$2 = value.nullableOfNonNullable;
  return {
          __typename: value.__typename,
          nullableOfNullable: !(value$1 == null) ? value$1.map(function (value) {
                  if (!(value == null)) {
                    return value;
                  }
                  
                }) : undefined,
          nullableOfNonNullable: !(value$2 == null) ? value$2.map(function (value) {
                  return value;
                }) : undefined
        };
}

function serialize(value) {
  var value$1 = value.nullableOfNonNullable;
  var nullableOfNonNullable = value$1 !== undefined ? value$1.map(function (value) {
          return value;
        }) : null;
  var value$2 = value.nullableOfNullable;
  var nullableOfNullable = value$2 !== undefined ? value$2.map(function (value) {
          if (value !== undefined) {
            return value;
          } else {
            return null;
          }
        }) : null;
  var value$3 = value.__typename;
  return {
          __typename: value$3,
          nullableOfNullable: nullableOfNullable,
          nullableOfNonNullable: nullableOfNonNullable
        };
}

function verifyArgsAndParse(_ListFragment, value) {
  return parse(value);
}

function verifyName(param) {
  
}

var ListFragment = {
  Raw: Raw,
  query: \"fragment ListFragment on Lists   {\\n__typename  \\nnullableOfNullable  \\nnullableOfNonNullable  \\n}\\n\",
  parse: parse,
  serialize: serialize,
  verifyArgsAndParse: verifyArgsAndParse,
  verifyName: verifyName
};

exports.ListFragment = ListFragment;
/* No side effect */

